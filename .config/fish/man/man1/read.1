.TH "read" 1 "Sat Oct 19 2013" "Version 2.0.0" "fish" \" -*- nroff -*-
.ad l
.nh
.SH NAME
read \- read - read line of input into variables 
.SH "read - read line of input into variables"
.PP
.SS "Synopsis"
\fCread [OPTIONS] [VARIABLES\&.\&.\&.]\fP
.SS "Description"
\fCread\fP reads one line from standard input and stores the result in one or more environment variables\&.
.PP
The following options are available:
.PP
.IP "\(bu" 2
\fC-c CMD\fP or \fC--command=CMD\fP sets the initial string in the interactive mode command buffer to \fCCMD\fP\&.
.IP "\(bu" 2
\fC-g\fP or \fC--global\fP makes the variables global (default behaviour)\&.
.IP "\(bu" 2
\fC-l\fP or \fC--local\fP makes the variables local\&.
.IP "\(bu" 2
\fC-m NAME\fP or \fC--mode-name=NAME\fP specifies that the name NAME should be used to save/load the history file\&. If NAME is fish, the regular fish history will be available\&.
.IP "\(bu" 2
\fC-p PROMPT_CMD\fP or \fC--prompt=PROMPT_CMD\fP uses the output of the shell command \fCPROMPT_CMD\fP as the prompt for the interactive mode\&. The default prompt command is \fCset_color green; echo read; set_color normal; echo '> '\fP\&.
.IP "\(bu" 2
\fC-s\fP or \fC--shell\fP enables syntax highlighting, tab completions and command termination suitable for entering shellscript code in the interactive mode\&.
.IP "\(bu" 2
\fC-u\fP or \fC--unexport\fP prevents the variables from being exported to child processes (default behaviour)\&.
.IP "\(bu" 2
\fC-U\fP or \fC--universal\fP causes the specified environment variable to be made universal\&.
.IP "\(bu" 2
\fC-x\fP or \fC--export\fP exports the variables to child processes\&.
.PP
.PP
\fCread\fP reads a single line of input from stdin, breaks it into tokens based on the \fCIFS\fP environment variable, and then assigns one token to each variable specified in \fCVARIABLES\fP\&. If there are more tokens than variables, the complete remainder is assigned to the last variable\&.
.SS "Example"
The following code stores the value 'hello' in the environment variable \fC$foo\fP\&.
.PP
\fCecho hello|read foo\fP 
