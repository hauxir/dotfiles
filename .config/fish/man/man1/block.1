.TH "block" 1 "Sat Oct 19 2013" "Version 2.0.0" "fish" \" -*- nroff -*-
.ad l
.nh
.SH NAME
block \- block - temporarily block delivery of events 
.SH "block - temporarily block delivery of events"
.PP
.SS "Synopsis"
\fCblock [OPTIONS\&.\&.\&.]\fP
.SS "Description"
\fCblock\fP prevents events triggered by \fCfish\fP or the \fC\fCemit\fP\fP command from being delivered and acted upon while the block is in place\&.
.PP
In functions, \fCblock\fP can be useful while performing work that should not be interrupted by the shell\&.
.PP
The block can be removed\&. Any events which triggered while the block was in place will then be delivered\&.
.PP
Event blocks should not be confused with code blocks, which are created with \fCbegin\fP, \fCif\fP, \fCwhile\fP or \fCfor\fP
.PP
The following parameters are available:
.PP
.IP "\(bu" 2
\fC-l\fP or \fC--local\fP Release the block automatically at the end of the current innermost code block scope
.IP "\(bu" 2
\fC-g\fP or \fC--global\fP Never automatically release the lock
.IP "\(bu" 2
\fC-e\fP or \fC--erase\fP Release global block
.PP
.SS "Example"
.PP
.nf

.SH "Create a function that listens for events"
.PP
.fi
.PP
.PP
.PP
.nf

function --on-event foo foo; echo 'foo fired'; end
.SH "Block the delivery of events"
.PP
.fi
.PP
.PP
.PP
.nf

block -g
emit foo
.SH "No output will be produced"
.PP
.fi
.PP
.PP
.PP
.nf

block -e
.SH "'foo fired' will now be printed"
.PP
.fi
.PP
.PP
.PP
.nf

.fi
.PP
 
