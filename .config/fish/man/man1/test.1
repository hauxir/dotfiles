.TH "test" 1 "Sat Oct 19 2013" "Version 2.0.0" "fish" \" -*- nroff -*-
.ad l
.nh
.SH NAME
test \- test - perform tests on files and text 
.SH "test - perform tests on files and text"
.PP
.SS "Synopsis"
\fCtest [EXPRESSION]\fP
.SS "Description"
Tests the expression given and sets the exit status to 0 if true, and 1 if false\&. An expression is made up of one or more operators and their arguments\&.
.PP
The following operators are available to examine files and directories:
.IP "\(bu" 2
\fC-b FILE\fP returns true if \fCFILE\fP is a block device\&.
.IP "\(bu" 2
\fC-c FILE\fP returns true if \fCFILE\fP is a character device\&.
.IP "\(bu" 2
\fC-d FILE\fP returns true if \fCFILE\fP is a directory\&.
.IP "\(bu" 2
\fC-e FILE\fP returns true if \fCFILE\fP exists\&.
.IP "\(bu" 2
\fC-f FILE\fP returns true if \fCFILE\fP is a regular file\&.
.IP "\(bu" 2
\fC-g FILE\fP returns true if \fCFILE\fP has the set-group-ID bit set\&.
.IP "\(bu" 2
\fC-G FILE\fP returns true if \fCFILE\fP exists and has the same group ID as the current user\&.
.IP "\(bu" 2
\fC-L FILE\fP returns true if \fCFILE\fP is a symbolic link\&.
.IP "\(bu" 2
\fC-O FILE\fP returns true if \fCFILE\fP exists and is owned by the current user\&.
.IP "\(bu" 2
\fC-p FILE\fP returns true if \fCFILE\fP is a named pipe\&.
.IP "\(bu" 2
\fC-r FILE\fP returns true if \fCFILE\fP is marked as readable\&.
.IP "\(bu" 2
\fC-s FILE\fP returns true if the size of \fCFILE\fP is greater than zero\&.
.IP "\(bu" 2
\fC-S FILE\fP returns true if \fCFILE\fP is a socket\&.
.IP "\(bu" 2
\fC-t FD\fP returns true if the file descriptor \fCFD\fP is a terminal (TTY)\&.
.IP "\(bu" 2
\fC-u FILE\fP returns true if \fCFILE\fP has the set-user-ID bit set\&.
.IP "\(bu" 2
\fC-w FILE\fP returns true if \fCFILE\fP is marked as writable; note that this does not check if the filesystem is read-only\&.
.IP "\(bu" 2
\fC-x FILE\fP returns true if \fCFILE\fP is marked as executable\&.
.PP
.PP
The following operators are available to compare and examine text strings:
.IP "\(bu" 2
\fCSTRING1 = STRING2\fP returns true if the strings \fCSTRING1\fP and \fCSTRING2\fP are identical\&.
.IP "\(bu" 2
\fCSTRING1 != STRING2\fP returns true if the strings \fCSTRING1\fP and \fCSTRING2\fP are not identical\&.
.IP "\(bu" 2
\fC-n STRING\fP returns true if the length of \fCSTRING\fP is non-zero\&.
.IP "\(bu" 2
\fC-z STRING\fP returns true if the length of \fCSTRING\fP is zero\&.
.PP
.PP
The following operators are available to compare and examine numbers:
.IP "\(bu" 2
\fCNUM1 -eq NUM2\fP returns true if \fCNUM1\fP and \fCNUM2\fP are numerically equal\&.
.IP "\(bu" 2
\fCNUM1 -ne NUM2\fP returns true if \fCNUM1\fP and \fCNUM2\fP are not numerically equal\&.
.IP "\(bu" 2
\fCNUM1 -gt NUM2\fP returns true if \fCNUM1\fP is greater than \fCNUM2\fP\&.
.IP "\(bu" 2
\fCNUM1 -ge NUM2\fP returns true if \fCNUM1\fP is greater than or equal to \fCNUM2\fP\&.
.IP "\(bu" 2
\fCNUM1 -lt NUM2\fP returns true if \fCNUM1\fP is less than \fCNUM2\fP\&.
.IP "\(bu" 2
\fCNUM1 -le NUM2\fP returns true if \fCNUM1\fP is less than or equal to \fCNUM2\fP\&.
.PP
.PP
Note that only integers are supported\&. For more complex mathematical operations, including fractions, the \fCenv\fP program may be useful\&. Consult the documentation for your operating system\&.
.PP
Expressions can be combined using the following operators:
.IP "\(bu" 2
\fCCOND1 -a COND2\fP returns true if both \fCCOND1\fP and \fCCOND2\fP are true\&.
.IP "\(bu" 2
\fCCOND1 -o COND2\fP returns true if either \fCCOND1\fP or \fCCOND2\fP are true\&.
.PP
.PP
Expressions can be inverted using the \fC!\fP operator:
.IP "\(bu" 2
\fC! EXPRESSION\fP returns true if \fCEXPRESSION\fP is false, and false if \fCEXPRESSION\fP is true\&.
.PP
.PP
Expressions can be grouped using parentheses\&.
.IP "\(bu" 2
\fC( EXPRESSION )\fP returns the value of \fCEXPRESSION\fP\&. Note that parentheses will usually require escaping with \fC\\(\fP to avoid being interpreted as a command substitution\&.
.PP
.SS "Examples"
If the \fC/tmp\fP directory exists, copy the \fC/etc/motd\fP file to it:
.PP
.PP
.nf

if test -d /tmp
    cp /etc/motd /tmp/motd
end
.fi
.PP
.PP
If the variable \fCMANPATH\fP is defined and not empty, print the contents:
.PP
.PP
.nf

if test -n $MANPATH
    echo $MANPATH
end
.fi
.PP
.PP
Parentheses and the \fC-o\fP and \fC-a\fP operators can be combined to produce more complicated expressions\&. In this example, success is printed if there is a \fC/foo\fP or \fC/bar\fP file as well as a \fC/baz\fP or \fC/bat\fP file\&.
.PP
.PP
.nf

if test \\( -f /foo -o -f /bar \\) -a \\( -f /baz -o -f /bat \\)
    echo Success\&.
end\&.
.fi
.PP
.SS "Standards"
\fCtest\fP implements a subset of the \fCIEEE Std 1003\&.1-2008 (POSIX\&.1) standard\fP\&. The following exceptions apply:
.IP "\(bu" 2
The \fC<\fP and \fC>\fP operators for comparing strings are not implemented\&. 
.PP

