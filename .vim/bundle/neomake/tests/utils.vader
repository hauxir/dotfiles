Include: _setup.vader

Execute (neomake#utils#LogMessage writes to logfile always):
  let neomake_verbose = 0
  Save neomake_logfile
  let g:neomake_logfile = tempname()
  call neomake#utils#LogMessage(1, 'msg1')
  Assert readfile(g:neomake_logfile)[0] =~# 'Log level 1: Neomake: msg1$'
  Restore

Execute (NeomakeTestsEnsureExe creates exe):
  Assert !executable('boobar')
  call g:NeomakeTestsEnsureExe('boobar')
  Assert executable('boobar')

Execute (neomake#utils#CompressWhitespace):
  function! F(text)
    let entry = {'text': a:text}
    return neomake#utils#CompressWhitespace(entry)
  endfunction
  AssertEqual F('foo'), 'foo'
  AssertEqual F(' foo'), ' foo'
  AssertEqual F('foo '), 'foo '
  AssertEqual F('foo bar '), 'foo bar '
  AssertEqual F("foo\nbar "), 'foo bar'
  AssertEqual F("foo\n bar "), 'foo bar'

Execute (neomake#utils#GetSetting):
  let g:maker = {'name': 'mymaker'}
  function! GetSetting()
    return neomake#utils#GetSetting('serialize', g:maker, 'default',
                                  \ ['myft'], bufnr('%'))
  endfunction

  AssertEqual GetSetting(), 'default'
  let g:neomake_serialize = 5
  AssertEqual GetSetting(), 5
  let b:neomake_serialize = 4
  AssertEqual GetSetting(), 4
  let g:maker.serialize = 3
  AssertEqual GetSetting(), 3
  let g:neomake_myft_mymaker_serialize = 2
  AssertEqual GetSetting(), 2
  let b:neomake_myft_mymaker_serialize = 1
  AssertEqual GetSetting(), 1
